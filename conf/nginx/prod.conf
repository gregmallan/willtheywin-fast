upstream willtheywinafast-app {
    server api:8000;
}

server {

    listen 80;
    listen [::]:80;

    server_name willtheywin.ca www.willtheywin.ca;

    location / {
        proxy_pass http://api;
        proxy_http_version 1.1;
        proxy_set_header Host "localhost";
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_redirect off;
    }

    # Logging
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log warn;

    server_tokens off;

    location / {
        return 301 https://willtheywin.ca$request_uri;
    }

    # Don't even return a response, just drop the connection
    location ~ (\.php|.aspx|.asp|myadmin|RPC2) {
	    return 444;
    }

    # Prevent clients from accessing to backup/config/source files
    location ~* (\.(bak|config|conf|sql|fla|psd|ini|log|sh|inc|swp|dist|.env|.db)|~)$ {
        return 403;
    }
}

server {

    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    server_name willtheywin.ca www.willtheywin.ca;

    server_tokens off;

    ssl_certificate /etc/nginx/ssl/live/weatherapi.ca/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/live/willtheywin.ca/privkey.pem;

    ssl_buffer_size 8k;

    ssl_dhparam /etc/ssl/certs/dhparam-2048.pem;

    # Mozilla Intermediate configuration
    ssl_protocols          TLSv1.2 TLSv1.3;
    ssl_ciphers            ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers on;

    ssl_ecdh_curve secp384r1;
    ssl_session_tickets off;

    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8;

    # Logging
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log warn;

    # Don't even return a response, just drop the connection
    location ~ (\.php|.aspx|.asp|myadmin|RPC2) {
            return 444;
    }

    location = /favicon.ico {
        access_log off;
        log_not_found off;
    }

    location = /robots.txt {
        access_log    off;
        log_not_found off;
    }

    location /static {
        autoindex off;
        alias /vol/static;
    }

    location / {
        try_files $uri $uri/ @willtheywin;
    }

    location @willtheywin {
        proxy_pass https://api;
        proxy_pass_request_headers on;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_redirect off;
        proxy_set_header Host "localhost";
    }

    # Prevent clients from accessing hidden files (starting with a dot)
    location ~* (^|/)\. {
        return 403;
    }

    # Prevent clients from accessing to backup/config/source files
    location ~* (\.(bak|config|conf|sql|fla|psd|ini|log|sh|inc|swp|dist|.env|.db)|~)$ {
        return 403;
    }

}
